//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {
    public partial class Entity {
        public RMC.Common.Entitas.Components.Input.InputComponent input { get { return (RMC.Common.Entitas.Components.Input.InputComponent)GetComponent(ComponentIds.Input); } }

        public bool hasInput { get { return HasComponent(ComponentIds.Input); } }

        public Entity AddInput(RMC.Common.Entitas.Components.Input.InputComponent.InputType newInputType, RMC.Common.UnityEngineReplacement.KeyCode newInputKeyCode, RMC.Common.UnityEngineReplacement.Vector2 newInputAxis) {
            var component = CreateComponent<RMC.Common.Entitas.Components.Input.InputComponent>(ComponentIds.Input);
            component.inputType = newInputType;
            component.inputKeyCode = newInputKeyCode;
            component.inputAxis = newInputAxis;
            return AddComponent(ComponentIds.Input, component);
        }

        public Entity ReplaceInput(RMC.Common.Entitas.Components.Input.InputComponent.InputType newInputType, RMC.Common.UnityEngineReplacement.KeyCode newInputKeyCode, RMC.Common.UnityEngineReplacement.Vector2 newInputAxis) {
            var component = CreateComponent<RMC.Common.Entitas.Components.Input.InputComponent>(ComponentIds.Input);
            component.inputType = newInputType;
            component.inputKeyCode = newInputKeyCode;
            component.inputAxis = newInputAxis;
            ReplaceComponent(ComponentIds.Input, component);
            return this;
        }

        public Entity RemoveInput() {
            return RemoveComponent(ComponentIds.Input);
        }
    }

    public partial class Matcher {
        static IMatcher _matcherInput;

        public static IMatcher Input {
            get {
                if (_matcherInput == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.Input);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherInput = matcher;
                }

                return _matcherInput;
            }
        }
    }
}
