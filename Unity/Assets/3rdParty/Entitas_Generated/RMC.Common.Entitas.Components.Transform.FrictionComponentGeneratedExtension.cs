//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {
    public partial class Entity {
        public RMC.Common.Entitas.Components.Transform.FrictionComponent friction { get { return (RMC.Common.Entitas.Components.Transform.FrictionComponent)GetComponent(ComponentIds.Friction); } }

        public bool hasFriction { get { return HasComponent(ComponentIds.Friction); } }

        public Entity AddFriction(RMC.Common.UnityEngineReplacement.Vector3 newFriction) {
            var component = CreateComponent<RMC.Common.Entitas.Components.Transform.FrictionComponent>(ComponentIds.Friction);
            component.friction = newFriction;
            return AddComponent(ComponentIds.Friction, component);
        }

        public Entity ReplaceFriction(RMC.Common.UnityEngineReplacement.Vector3 newFriction) {
            var component = CreateComponent<RMC.Common.Entitas.Components.Transform.FrictionComponent>(ComponentIds.Friction);
            component.friction = newFriction;
            ReplaceComponent(ComponentIds.Friction, component);
            return this;
        }

        public Entity RemoveFriction() {
            return RemoveComponent(ComponentIds.Friction);
        }
    }

    public partial class Matcher {
        static IMatcher _matcherFriction;

        public static IMatcher Friction {
            get {
                if (_matcherFriction == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.Friction);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherFriction = matcher;
                }

                return _matcherFriction;
            }
        }
    }
}
